[
  {
    "kind": "AppDesign",
    "namespace": "FlowJo_stats",
    "description": "",
    "name": "MME_default_settings",
    "type": "MME_FlowJo_stats",
    "factors": [
      {
        "kind": "MappingFactor",
        "name": "exp.value",
        "type": "double",
        "isSingle": true,
        "description": "Measurements in long format. The .value output of the Gather step, called exp.value",
        "factorName": "The FlowJo reported stats",
        "factors": [
          {
            "kind": "Factor",
            "name": "exp.value",
            "type": "double"
          }
        ],
        "isRequired": true
      },
      {
        "kind": "MappingFactor",
        "name": "Observation",
        "type": "string",
        "isSingle": false,
        "description": "Select the samples column from the measurement file (i.e., FlowJo file).\n\nExamples: `samples`",
        "factorName": "File/Sample name (FlowJo stats file)",
        "factors": [],
        "isRequired": true
      },
      {
        "kind": "MappingFactor",
        "name": "sample.Observation",
        "type": "string",
        "isSingle": false,
        "description": "Select the samples column from the sample annotation file.\n\nExamples: `sample.samples`",
        "factorName": "File/Sample name (sample annotation file)",
        "factors": [
          {
            "kind": "Factor",
            "name": "sample.samples",
            "type": "string"
          }
        ],
        "isRequired": true
      },
      {
        "kind": "MappingFactor",
        "name": "sample.Supergroup",
        "type": "string",
        "isSingle": false,
        "description": "Select the ELN column from the sample annotation file, otherwise, leave blank.\n\nExamples: `sample.ELN`",
        "factorName": "sample.ELN",
        "factors": [],
        "isRequired": false
      },
      {
        "kind": "MappingFactor",
        "name": "exp.variable",
        "type": "string",
        "isSingle": false,
        "description": "FlowJo table columns/headers representing the various sub-populations. The .variable output of the Gather step, called exp.variable",
        "factorName": "FlowJo sub-populations (FlowJo stats file)",
        "factors": [
          {
            "kind": "Factor",
            "name": "exp.variable",
            "type": "string"
          }
        ],
        "isRequired": true
      },
      {
        "kind": "MappingFactor",
        "name": "cellpop.FlowJo name",
        "type": "string",
        "isSingle": false,
        "description": "Column of the display labels file that contains the various FlowJo-reported sub-populations (e.g cellpop.FlowJo name).",
        "factorName": "FlowJo sub-populations (display labels file)",
        "factors": [
          {
            "kind": "Factor",
            "name": "cellpop.FlowJo name",
            "type": "string"
          },
          {
            "kind": "Factor",
            "name": "cellpop.Flowjo name",
            "type": "string"
          }
        ],
        "isRequired": true
      },
      {
        "kind": "MappingFactor",
        "name": "cellpop.Display name",
        "type": "string",
        "isSingle": false,
        "description": "Column of the display labels file that contains the desired labels for the various sub-populations (e.g cellpop.Display name)",
        "factorName": "Display labelsfor sub-populations",
        "factors": [
          {
            "kind": "Factor",
            "name": "cellpop.Display name",
            "type": "string"
          }
        ],
        "isRequired": true
      },
      {
        "kind": "MappingFactor",
        "name": "sample.Group",
        "type": "string",
        "isSingle": false,
        "description": "Select the factors representing the conditions. Multiple selections are possible.\n\nExamples: `sample.compound`, `sample.ATP`, `sample.Ab`, `sample.Ab2` and etc..",
        "factorName": "Compounds/Conditions",
        "factors": [
          {
            "kind": "Factor",
            "name": "sample.compound",
            "type": "string"
          }
        ],
        "isRequired": true
      }
    ],
    "filters": [
      {
        "kind": "MappingFilter",
        "name": "Are there any unmatched columns?",
        "description": "",
        "namedFilter": {
          "kind": "NamedFilter",
          "logical": "or",
          "not": false,
          "filterExprs": [
            {
              "kind": "FilterExpr",
              "filterOp": "equals",
              "stringValue": "",
              "factor": {
                "kind": "Factor",
                "name": "cellpop.Display name",
                "type": "string"
              }
            },
            {
              "kind": "FilterExpr",
              "filterOp": "equals",
              "stringValue": "NA",
              "factor": {
                "kind": "Factor",
                "name": "cellpop.Display name",
                "type": "string"
              }
            }
          ],
          "name": "Are there any unmatched columns?"
        },
        "isRequired": false
      },
      {
        "kind": "MappingFilter",
        "name": "Kepp only matched columns",
        "description": "",
        "namedFilter": {
          "kind": "NamedFilter",
          "logical": "or",
          "not": true,
          "filterExprs": [
            {
              "kind": "FilterExpr",
              "filterOp": "equals",
              "stringValue": "",
              "factor": {
                "kind": "Factor",
                "name": "cellpop.Display name",
                "type": "string"
              }
            },
            {
              "kind": "FilterExpr",
              "filterOp": "equals",
              "stringValue": "NA",
              "factor": {
                "kind": "Factor",
                "name": "cellpop.Display name",
                "type": "string"
              }
            }
          ],
          "name": "Kepp only matched columns"
        },
        "isRequired": false
      },
      {
        "kind": "MappingFilter",
        "name": "Select your control compound/condition",
        "description": "",
        "namedFilter": {
          "kind": "NamedFilter",
          "logical": "and",
          "not": false,
          "filterExprs": [
            {
              "kind": "FilterExpr",
              "filterOp": "equals",
              "stringValue": "01 iso",
              "factor": {
                "kind": "Factor",
                "name": "sample.compound",
                "type": "string"
              }
            }
          ],
          "name": "Select your control compound/condition"
        },
        "isRequired": false
      },
      {
        "kind": "MappingFilter",
        "name": "Keep only matched columns",
        "description": "",
        "namedFilter": {
          "kind": "NamedFilter",
          "logical": "or",
          "not": true,
          "filterExprs": [
            {
              "kind": "FilterExpr",
              "filterOp": "equals",
              "stringValue": "",
              "factor": {
                "kind": "Factor",
                "name": "cellpop.Display name",
                "type": "string"
              }
            },
            {
              "kind": "FilterExpr",
              "filterOp": "equals",
              "stringValue": "NA",
              "factor": {
                "kind": "Factor",
                "name": "cellpop.Display name",
                "type": "string"
              }
            }
          ],
          "name": "Keep only matched columns"
        },
        "isRequired": false
      }
    ]
  }
]